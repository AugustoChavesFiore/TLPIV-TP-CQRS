services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    depends_on:
      - commandapp
      - querysapp
      - front
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - rabbitmq_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - rabbitmq_network

  commandapp:
    depends_on:
      - db-command
      - rabbitmq
    build:
      dockerfile: Dockerfile
      context: ./backend
    image: command-docker
    container_name: CQRS-command
    restart: always
    expose:
      - "${PORT}"
    environment:
      PORT: ${PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DIALECT: ${DB_DIALECT}
      RABBITMQ_URL: ${RABBITMQ_URL}
    networks:
      - rabbitmq_network

  querysapp:
    depends_on:
      - db-app
      - rabbitmq
    build:
      dockerfile: Dockerfile
      context: ./backend_querys
    image: querys-docker
    container_name: CQRS-querys
    restart: always
    expose:
      - "${PORT_QUERY}"
    environment:
      PORT_QUERY: ${PORT_QUERY}
      MONGO_URL_QUERY: ${MONGO_URL_QUERY}
      DB_NAME_QUERY: ${DB_NAME_QUERY}
      RABBITMQ_URL: ${RABBITMQ_URL}
    networks:
      - rabbitmq_network
      
  front:
    depends_on:
      - commandapp
      - querysapp
    build:
      context: ./cqrs-frontend
      dockerfile: Dockerfile
    image: front-docker
    container_name: front-CQRS
    networks:
      - rabbitmq_network
    expose:
      - 3000
    environment:
      - VITE_API_URL=${VITE_API_URL}

  db-app:
    depends_on:
      - rabbitmq
    image: mongo
    container_name: mongo-app
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGODB_DATABASE: db-app
    volumes:
      - ./mongo:/data/db
    networks:
      - rabbitmq_network

  db-command:
    depends_on:
      - rabbitmq
    container_name: ${DB_NAME}
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - rabbitmq_network

  pgAdmin:
    depends_on:
      - db-command
    image: dpage/pgadmin4
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "8080:8000"
    environment:
      - PGADMIN_DEFAULT_PASSWORD=123456
      - PGADMIN_DEFAULT_EMAIL=admin@google.com
    restart: always
    networks:
      - rabbitmq_network

networks:
  rabbitmq_network:
    driver: bridge
